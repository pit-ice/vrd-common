Azure CosmosDB의 저장 데이터에 대한 MongoDB 이관 호환성 여부 테스트와 CRUD 테스트

## Source정보
Source Host : vrd-dev.mongo.cosmos.azure.com:10255
Source Database : azure_cosmos_test
Port : 10255
ID : vrd-dev
PW : kHOsnhFOpABVhr0HcF2zVo6khb38dGiRx8rLM15eoBXp13cAPXrmAWmLHEOSkN7nL8lQoHX1e1gxwSpXYnfIXg==
Source Collection : articles

## Target정보
Target Host : localhost
Target Database : vrd_test
Port : 27017
Target Collection : articles

1. Source 콜렉션 확인 및 export 준비
C:\> mongo vrd-dev.mongo.cosmos.azure.com:10255 -u vrd-dev -p kHOsnhFOpABVhr0HcF2zVo6khb38dGiRx8rLM15eoBXp13cAPXrmAWmLHEOSkN7nL8lQoHX1e1gxwSpXYnfIXg==  --ssl --sslAllowInvalidCertificates
globaldb:PRIMARY> show databases;
azure_cosmos_test  0.000GB
vrd-dev            0.000GB
globaldb:PRIMARY> use azure_cosmos_test
switched to db azure_cosmos_test
globaldb:PRIMARY> show collections
articles
globaldb:PRIMARY> db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Alpha", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }
globaldb:PRIMARY>


2. 입력/수정/삭제 데이터 확인
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Alpha", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }

# 수정 테스트(content중 "content02"인 데이터의 writer를 "Michael"로 수정)
db.articles.update({ content: "content02" }, { $set: { writer: "Michael" } } )
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }

#. 신규 데이터 입력 테스트
db.articles.insert({"title" : "vrd-cosmos 테스트", "content" : "컨텐츠 테스트", "writer" : "아이유"})
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5f4cf9a82eac1451fabc2abd"), "title" : "vrd-cosmos 테스트", "content" : "컨텐츠 테스트", "writer" : "아이유" }

# 삭제 테스트(title이 "vrd-cosmos 테스트"인 데이터 삭제)
db.articles.remove({ title: 'vrd-cosmos 테스트' })
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }


3. mongoexport utility를 이용한 데이터 백업
# Azure Cosmos DB의 API for MongoDB 계정을 사용하는 경우 3.6 버전의 계정에는 *.mongo.cosmos.azure.com 형식의 엔드포인트가 있지만 
# 3.2 버전의 계정에는 *.documents.azure.com 형식의 엔드포인트가 있습니다.
# 테스트한 결과 3.6버전으로 mongoexport 수행시 데이터 export가 수행되지만, export되지 않음.
# 3.2버전의 엔드포인트(*.documents.azure.com)로 접속해서 데이터 추출하면 정상 수행.
C:\Temp> mongoexport /h vrd-dev.documents.azure.com:10255 /u vrd-dev /p kHOsnhFOpABVhr0HcF2zVo6khb38dGiRx8rLM15eoBXp13cAPXrmAWmLHEOSkN7nL8lQoHX1e1gxwSpXYnfIXg== /ssl /sslAllowInvalidCertificates /d azure_cosmos_test /c articles /o cosmosdb-articles-backup.json


4. export 데이터 확인.
C:\Temp> notepad cosmosdb-articles-backup.json
{"_id":{"$oid":"5eacf7da8f33515d54c8574a"},"title":"article01","content":"content01","writer":"Velopert","likes":0.0,"comments":[]}
{"_id":{"$oid":"5eacf7da8f33515d54c8574c"},"title":"article03","content":"content03","writer":"Bravo","likes":40.0,"comments":[{"name":"Charlie","message":"Hey Man!"},{"name":"Delta","message":"Hey Man!"}]}
{"_id":{"$oid":"5eacf7da8f33515d54c8574b"},"title":"article02","content":"content02","writer":"Michael","likes":23.0,"comments":[{"name":"Bravo","message":"Hey Man!"}]}

5. MongoDB 데이터 import
C:\Temp>mongoimport --db vrd_test --collection articles --file cosmosdb-articles-backup.json
2020-08-31T23:21:04.239+0900    connected to: mongodb://localhost/
2020-08-31T23:21:04.323+0900    3 document(s) imported successfully. 0 document(s) failed to import.

6. 이관 데이터 확인
C:\Temp>mongo
> use vrd_test
switched to db vrd_test
> db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Alpha", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Michael", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }

7. 이관 후 입력/수정/삭제 테스트
# 수정 테스트(content중 "content02"인 데이터의 writer를 "Michael mongo"로 수정)
db.articles.update({ content: "content02" }, { $set: { writer: "Michael mongo" } } )
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael mongo", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }

# 삭제 테스트
db.articles.remove({ title: 'vrd-cosmos 테스트' });
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael mongo", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }

# 입력 테스트
db.articles.insert({"title" : "vrd-cosmos 테스트2", "content" : "컨텐츠 테스트2", "writer" : "아이유2"})
db.articles.find()
{ "_id" : ObjectId("5eacf7da8f33515d54c8574a"), "title" : "article01", "content" : "content01", "writer" : "Velopert", "likes" : 0, "comments" : [ ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574b"), "title" : "article02", "content" : "content02", "writer" : "Michael mongo", "likes" : 23, "comments" : [ { "name" : "Bravo", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5eacf7da8f33515d54c8574c"), "title" : "article03", "content" : "content03", "writer" : "Bravo", "likes" : 40, "comments" : [ { "name" : "Charlie", "message" : "Hey Man!" }, { "name" : "Delta", "message" : "Hey Man!" } ] }
{ "_id" : ObjectId("5f4d97173ed44e96ce6c6a70"), "title" : "vrd-cosmos 테스트2", "content" : "컨텐츠 테스트2", "writer" : "아이유2" }



8. 종료



